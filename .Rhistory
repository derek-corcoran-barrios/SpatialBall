load("court.rda")
load("season2017.rda")
devtools::use_data(season2017)
colnames(season2017)
library(QuadCostAmpl)
head(season2017)
unique(season2017$SHOT_ZONE_AREA)
dput(unique(season2017$SHOT_ZONE_AREA))
devtools::use_data(court, internal = TRUE)
head(season2017)
dput(unique(season2017$SHOT_ZONE_BASIC)
)
colnames(season2017)
colnames(season2017)[1:14]
head(season2017[,1:14])
unique(season2017$ACTION_TYPE)
colnames(season2017)[1:14]
head(season2017[,1:12])
unique(season2017$PERIOD)
season2017$PERIOD
head(season2017[,1:10])
library(SpatialBall2)
library(SpatialBall2)
library(SpatialBall2)
library(SpatialBall2)
library("SpatialBall2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
detach("package:SpatialBall2", unload=TRUE)
remove.packages("SpatialBall2", lib="~/R/x86_64-pc-linux-gnu-library/3.4")
library(SpatialBall)
library(SpatialBall)
library(SpatialBall)
getwd()
library(SpatialBall)
data("season2017")
#Examples with several teams
DefShotSeasonGraphTeam(season2017, team = "Sas")
DefShotSeasonGraphTeam(season2017, team = "Cle")
library(SpatialBall)
library(SpatialBall)
data("season2017")
#Examples with several players
ShotSeasonGraphPlayer(season2017, player = "Stephen Curry")
ShotSeasonGraphPlayer(season2017, player = "DeMar DeRozan")
ShotSeasonGraphPlayer(season2017, player = "Stephen Curry", type = "PCT")
ShotSeasonGraphPlayer(season2017, player = "DeAndre Jordan", type = "PCT")
library(SpatialBall)
library(SpatialBall)
library(SpatialBall)
p <- ggplot(mpg, aes(displ, hwy, size = hwy)) +
geom_point()
p
p + scale_size("Highway mpg")
p + scale_size(range = c(0, 10))
library(ggplot2)
p <- ggplot(mpg, aes(displ, hwy, size = hwy)) +
geom_point()
p
p + scale_size("Highway mpg")
p + scale_size(range = c(0, 10))
ggplot(luv_colours, aes(u, v)) +
geom_point(aes(colour = col), size = 3) +
scale_color_identity() +
coord_equal()
ggplot(luv_colours, aes(u, v)) +
geom_point(aes(colour = col), size = 3) +
scale_color_identity()
ggplot(luv_colours, aes(u, v)) +
geom_point(aes(colour = col), size = 3)
library(SpatialBall)
library(SpatialBall)
data("season2017")
#Examples with several players
PointShotSeasonGraphPlayer(season2017, player = "James Harden")
PointShotSeasonGraphPlayer(season2017, player = "DeMar DeRozan")
library(SpatialBall)
data("season2017")
#Examples with several players
PointShotSeasonGraphPlayer(season2017, player = "James Harden")
PointShotSeasonGraphPlayer(season2017, player = "DeMar DeRozan")
count(season2017$PLAYER_NAME)
library(dplyr)
head(season2017 %>% group_by(PLAYER_NAME) %>% summarise(N = n()) %>% arrange(N))
head((season2017 %>% group_by(PLAYER_NAME) %>% summarise(N = n()) %>% arrange(N)), 40)
View(head((season2017 %>% group_by(PLAYER_NAME) %>% summarise(N = n()) %>% arrange(N)), 40))
library(SpatialBall)
library(SpatialBall)
library(SpatialBall)
library(SpatialBall)
library(SpatialBall)
head((season2017 %>% group_by(PLAYER_NAME) %>% summarise(N = n()) %>% arrange(N)), 100)
head((season2017 %>% group_by(PLAYER_NAME) %>% summarise(N = n()) %>% arrange(N)), 100)
View(head((season2017 %>% group_by(PLAYER_NAME) %>% summarise(N = n()) %>% arrange(N)), 100))
library(SpatialBall)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
data("season2017")
ShotSeasonGraphPlayer(season2017, player = "Stephen Curry")
ShotSeasonGraphPlayer(season2017, player = "Stephen Curry", type = "PCT")
ShotSeasonGraphPlayer(season2017, player = "Kyle Singler")
PointShotSeasonGraphPlayer(season2017, player = "Kyle Singler")
PointShotSeasonGraphPlayer(season2017, player = "Kyle Singler", Type = "Made")
PointShotSeasonGraphPlayer(season2017, player = "Kyle Singler", Type = "Made", kernel = FALSE)
data("season2017")
OffShotSeasonGraphTeam(season2017, team = "GSW")
data("season2017")
OffShotSeasonGraphTeam(season2017, team = "GSW", type = "PCT")
data("season2017")
DefShotSeasonGraphTeam(season2017, team = "Sas", type = "PCT")
library(SpatialBall)
format((max(Season2018$GAME_DATE)), '%m/%d/%Y')
format((max(season2017$GAME_DATE)), '%m/%d/%Y')
by_team <- readRDS("by_team.rds")
View(by_team)
teamName <- by_team$team_city
Season <- "2017-18"
paste0("http://stats.nba.com/stats/shotchartdetail?CFID=33&CFPARAMS=",Season ,"&ContextFilter=&ContextMeasure=FGA&DateFrom=", startScrape ,"&DateTo=&GameID=&GameSegment=&LastNGames=0&LeagueID=00&Location=&MeasureType=Base&Month=0&OpponentTeamID=0&Outcome=&PaceAdjust=N&PerMode=PerGame&Period=0&PlayerID=0&PlusMinus=N&Position=&Rank=N&RookieYear=&Season=",Season,"&SeasonSegment=&SeasonType=Regular+Season&TeamID=0&VsConference=&VsDivision=&mode=Advanced&showDetails=0&showShots=1&showZones=0&PlayerPosition=")
is.null
is.null(1)
is.null(NULL)
paste0("http://stats.nba.com/stats/shotchartdetail?CFID=33&CFPARAMS=",Season ,"&ContextFilter=&ContextMeasure=FGA&DateFrom=&DateTo=&GameID=&GameSegment=&LastNGames=0&LeagueID=00&Location=&MeasureType=Base&Month=0&OpponentTeamID=0&Outcome=&PaceAdjust=N&PerMode=PerGame&Period=0&PlayerID=0&PlusMinus=N&Position=&Rank=N&RookieYear=&Season=",Season,"&SeasonSegment=&SeasonType=Regular+Season&TeamID=0&VsConference=&VsDivision=&mode=Advanced&showDetails=0&showShots=1&showZones=0&PlayerPosition="
)
library(SpatialBall)
library(SpatialBall)
Seasonscrape(season = "2017-18", Start = "12/05/2017", End = "14/05/2017")
Seasonscrape(season = "2017-18", Start = NULL, End = NULL)
knitr::opts_chunk$set(echo = TRUE)
if (!require("pacman")) install.packages("pacman")
pacman::p_load(rjson, grid, gridExtra, png, RCurl, ggplot2, jpeg, hexbin, sp, knitr, dplyr, lubridate, purrr)
startScrape <- format((max(Season2018$GAME_DATE)), '%m/%d/%Y')
shotURLtotal <- paste("http://stats.nba.com/stats/shotchartdetail?CFID=33&CFPARAMS=2017-18&ContextFilter=&ContextMeasure=FGA&DateFrom=", "12/05/2017" ,"&DateTo=&GameID=&GameSegment=&LastNGames=0&LeagueID=00&Location=&MeasureType=Base&Month=0&OpponentTeamID=0&Outcome=&PaceAdjust=N&PerMode=PerGame&Period=0&PlayerID=0&PlusMinus=N&Position=&Rank=N&RookieYear=&Season=2017-18&SeasonSegment=&SeasonType=Regular+Season&TeamID=0&VsConference=&VsDivision=&mode=Advanced&showDetails=0&showShots=1&showZones=0&PlayerPosition=", sep = "")
Season2018b <- list()
Season2018b <- fromJSON(file = shotURLtotal, method="C")
fromJSON
Season2018b <- fromJSON(file = shotURLtotal, method="C")
Names <- Season2018b$resultSets[[1]][[2]]
Names
Season2018b <- data.frame(matrix(unlist(Season2018b$resultSets[[1]][[3]]), ncol = 24, byrow = TRUE))
Seasonscrape(season = "2017-18", Start = NULL, End = NULL)
library(SpatialBall)
Seasonscrape(season = "2017-18", Start = "12/05/2017", End = "14/05/2017")
Seasonscrape(season = "2017-18", Start = NULL, End = NULL)
Seasonscrape(season = "2017-18", Start = "12/05/2017", End = "12/07/2017")
library(SpatialBall)
library(SpatialBall)
season <- "2016-17"
type <- "Playoffs"
shotURLtotal <- paste0("http://stats.nba.com/stats/shotchartdetail?CFID=33&CFPARAMS=",season ,"&ContextFilter=&ContextMeasure=FGA&DateFrom=&DateTo=&GameID=&GameSegment=&LastNGames=0&LeagueID=00&Location=&MeasureType=Base&Month=0&OpponentTeamID=0&Outcome=&PaceAdjust=N&PerMode=PerGame&Period=0&PlayerID=0&PlusMinus=N&Position=&Rank=N&RookieYear=&Season=",season,"&SeasonSegment=&SeasonType=", type ,"&TeamID=0&VsConference=&VsDivision=&mode=Advanced&showDetails=0&showShots=1&showZones=0&PlayerPosition="
shotURLtotal <- paste0("http://stats.nba.com/stats/shotchartdetail?CFID=33&CFPARAMS=",season ,"&ContextFilter=&ContextMeasure=FGA&DateFrom=&DateTo=&GameID=&GameSegment=&LastNGames=0&LeagueID=00&Location=&MeasureType=Base&Month=0&OpponentTeamID=0&Outcome=&PaceAdjust=N&PerMode=PerGame&Period=0&PlayerID=0&PlusMinus=N&Position=&Rank=N&RookieYear=&Season=",season,"&SeasonSegment=&SeasonType=Regular+Season&TeamID=0&VsConference=&VsDivision=&mode=Advanced&showDetails=0&showShots=1&showZones=0&PlayerPosition="
season <- "2016-17"
type <- "Playoffs"
shotURLtotal <- paste0("http://stats.nba.com/stats/shotchartdetail?CFID=33&CFPARAMS=",season ,"&ContextFilter=&ContextMeasure=FGA&DateFrom=&DateTo=&GameID=&GameSegment=&LastNGames=0&LeagueID=00&Location=&MeasureType=Base&Month=0&OpponentTeamID=0&Outcome=&PaceAdjust=N&PerMode=PerGame&Period=0&PlayerID=0&PlusMinus=N&Position=&Rank=N&RookieYear=&Season=",season,"&SeasonSegment=&SeasonType=", type ,"&TeamID=0&VsConference=&VsDivision=&mode=Advanced&showDetails=0&showShots=1&showZones=0&PlayerPosition=")
Season <- fromJSON(file = shotURLtotal, method="C")
View(Season)
Names <- Season$resultSets[[1]][[2]]
# unlist shot data, save into a data frame
Season <- data.frame(matrix(unlist(Season$resultSets[[1]][[3]]), ncol = 24, byrow = TRUE))
colnames(Season) <- Names
View(Season)
library(SpatialBall)
"Regular season"
strsplit(x = c("Regular season"), " ")
gsub(x = c("Regular season"), " ", "+")
season <- "2016-17"
type <- "Regular Season"
type <-sub(x = type, " ", "+")
shotURLtotal <- paste0("http://stats.nba.com/stats/shotchartdetail?CFID=33&CFPARAMS=",season ,"&ContextFilter=&ContextMeasure=FGA&DateFrom=&DateTo=&GameID=&GameSegment=&LastNGames=0&LeagueID=00&Location=&MeasureType=Base&Month=0&OpponentTeamID=0&Outcome=&PaceAdjust=N&PerMode=PerGame&Period=0&PlayerID=0&PlusMinus=N&Position=&Rank=N&RookieYear=&Season=",season,"&SeasonSegment=&SeasonType=", type ,"&TeamID=0&VsConference=&VsDivision=&mode=Advanced&showDetails=0&showShots=1&showZones=0&PlayerPosition=")
Season <- fromJSON(file = shotURLtotal, method="C")
Names <- Season$resultSets[[1]][[2]]
# unlist shot data, save into a data frame
Season <- data.frame(matrix(unlist(Season$resultSets[[1]][[3]]), ncol = 24, byrow = TRUE))
colnames(Season) <- Names
Season <- rjson::fromJSON(file = shotURLtotal, method="C")
season <- "2016-17"
type <- "Regular Season"
type <-sub(x = type, " ", "+")
shotURLtotal <- paste0("http://stats.nba.com/stats/shotchartdetail?CFID=33&CFPARAMS=",season ,"&ContextFilter=&ContextMeasure=FGA&DateFrom=&DateTo=&GameID=&GameSegment=&LastNGames=0&LeagueID=00&Location=&MeasureType=Base&Month=0&OpponentTeamID=0&Outcome=&PaceAdjust=N&PerMode=PerGame&Period=0&PlayerID=0&PlusMinus=N&Position=&Rank=N&RookieYear=&Season=",season,"&SeasonSegment=&SeasonType=", type ,"&TeamID=0&VsConference=&VsDivision=&mode=Advanced&showDetails=0&showShots=1&showZones=0&PlayerPosition=")
Season <- rjson::fromJSON(file = shotURLtotal, method="C")
Names <- Season$resultSets[[1]][[2]]
# unlist shot data, save into a data frame
Season <- data.frame(matrix(unlist(Season$resultSets[[1]][[3]]), ncol = 24, byrow = TRUE))
colnames(Season) <- Names
library(SpatialBall)
library(SpatialBall)
shoturl "http://stats.nba.com/stats/shotchartlineupdetail/?leagueId=00&season=2017-18&seasonType=Regular+Season&teamId=0&outcome=&location=&month=0&seasonSegment=&dateFrom=&dateTo=&opponentTeamId=0&vsConference=&vsDivision=&gameSegment=&period=0&lastNGames=0&gameId=&group_id=0&contextFilter=&contextMeasure=FGA"
http://stats.nba.com/stats/shotchartdetail?CFID=33&CFPARAMS=",season ,"&ContextFilter=&ContextMeasure=FGA&DateFrom=&DateTo=&GameID=&GameSegment=&LastNGames=0&LeagueID=00&Location=&MeasureType=Base&Month=0&OpponentTeamID=0&Outcome=&PaceAdjust=N&PerMode=PerGame&Period=0&PlayerID=0&PlusMinus=N&Position=&Rank=N&RookieYear=&Season=",season,"&SeasonSegment=&SeasonType=", type,"&TeamID=0&VsConference=&VsDivision=&mode=Advanced&showDetails=0&showShots=1&showZones=0&PlayerPosition=
shoturl <- "http://stats.nba.com/stats/shotchartlineupdetail/?leagueId=00&season=2017-18&seasonType=Regular+Season&teamId=0&outcome=&location=&month=0&seasonSegment=&dateFrom=&dateTo=&opponentTeamId=0&vsConference=&vsDivision=&gameSegment=&period=0&lastNGames=0&gameId=&group_id=0&contextFilter=&contextMeasure=FGA"
Season <- rjson::fromJSON(file = shoturl, method="C")
Names <- Season$resultSets[[1]][[2]]
Names
Season <- data.frame(matrix(unlist(Season$resultSets[[1]][[3]]), ncol = length(Names), byrow = TRUE))
Season[[1]]
Season[[1]][[2]]
http://stats.nba.com/stats/shotchartdetail?CFID=33&CFPARAMS=",season ,"&ContextFilter=&ContextMeasure=FGA&DateFrom=&DateTo=&GameID=&GameSegment=&LastNGames=0&LeagueID=00&Location=&MeasureType=Base&Month=0&OpponentTeamID=0&Outcome=&PaceAdjust=N&PerMode=PerGame&Period=0&PlayerID=0&PlusMinus=N&Position=&Rank=N&RookieYear=&Season=",season,"&SeasonSegment=&SeasonType=", type,"&TeamID=0&VsConference=&VsDivision=&mode=Advanced&showDetails=0&showShots=1&showZones=0&PlayerPosition=
shoturl <- "http://stats.nba.com/stats/shotchartlineupdetail/?leagueId=00&season=2017-18&seasonType=Regular+Season&teamId=0&outcome=&location=&month=0&seasonSegment=&dateFrom=&dateTo=&opponentTeamId=0&vsConference=&vsDivision=&gameSegment=&period=0&lastNGames=0&gameId=&group_id=0&contextFilter=&contextMeasure=FGA"
Season <- rjson::fromJSON(file = shoturl, method="C")
Names <- Season$resultSets[[1]][[2]]
Season[[1]]
Season$resource
Season$parameters
Season$resultSets
Season$resultSets[[1]]
Season$resultSets[[2]]
Season$resultSets[[3]]
Season$resultSets[[2]]
Season$resultSets[[2]][[1]]
Season$resultSets[[2]]$name
Season$resultSets[[2]]$headers
Season$resultSets[[1]]
Season$resultSets[[1]]$rowSet
http://stats.nba.com/stats/shotchartdetail?CFID=33&CFPARAMS=",season ,"&ContextFilter=&ContextMeasure=FGA&DateFrom=&DateTo=&GameID=&GameSegment=&LastNGames=0&LeagueID=00&Location=&MeasureType=Base&Month=0&OpponentTeamID=0&Outcome=&PaceAdjust=N&PerMode=PerGame&Period=0&PlayerID=0&PlusMinus=N&Position=&Rank=N&RookieYear=&Season=",season,"&SeasonSegment=&SeasonType=", type,"&TeamID=0&VsConference=&VsDivision=&mode=Advanced&showDetails=0&showShots=1&showZones=0&PlayerPosition=
shoturl <- "http://stats.nba.com/stats/shotchartlineupdetail/?leagueId=00&season=2016-17&seasonType=Regular+Season&teamId=0&outcome=&location=&month=0&seasonSegment=&dateFrom=&dateTo=&opponentTeamId=0&vsConference=&vsDivision=&gameSegment=&period=0&lastNGames=0&gameId=&group_id=0&contextFilter=&contextMeasure=FGA"
Season <- rjson::fromJSON(file = shoturl, method="C")
¿
Names <- Season$resultSets[[1]][[2]]
str(Season)
http://stats.nba.com/stats/shotchartdetail?CFID=33&CFPARAMS=",season ,"&ContextFilter=&ContextMeasure=FGA&DateFrom=&DateTo=&GameID=&GameSegment=&LastNGames=0&LeagueID=00&Location=&MeasureType=Base&Month=0&OpponentTeamID=0&Outcome=&PaceAdjust=N&PerMode=PerGame&Period=0&PlayerID=0&PlusMinus=N&Position=&Rank=N&RookieYear=&Season=",season,"&SeasonSegment=&SeasonType=", type,"&TeamID=0&VsConference=&VsDivision=&mode=Advanced&showDetails=0&showShots=1&showZones=0&PlayerPosition=
shoturl <- "http://stats.nba.com/stats/shotchartlineupdetail?leagueId=00&season=2016-17&seasonType=Regular+Season&teamId=0&outcome=&location=&month=0&seasonSegment=&dateFrom=&dateTo=&opponentTeamId=0&vsConference=&vsDivision=&gameSegment=&period=0&lastNGames=0&gameId=&group_id=0&contextFilter=&contextMeasure=FGA"
Season <- rjson::fromJSON(file = shoturl, method="C")
Names <- Season$resultSets[[1]][[2]]
Season <- data.frame(matrix(unlist(Season$resultSets[[1]][[3]]), ncol = length(Names), byrow = TRUE))
shoturl <- "http://stats.nba.com/stats/shotchartlineupdetail?CFID=33&CFPARAMS=leagueId=00&season=2016-17&seasonType=Regular+Season&teamId=0&outcome=&location=&month=0&seasonSegment=&dateFrom=&dateTo=&opponentTeamId=0&vsConference=&vsDivision=&gameSegment=&period=0&lastNGames=0&gameId=&group_id=0&contextFilter=&contextMeasure=FGA"
shoturl <- "http://stats.nba.com/stats/shotchartlineupdetail?CFID=33&CFPARAMS=leagueId=00&season=2016-17&seasonType=Regular+Season&teamId=0&outcome=&location=&month=0&seasonSegment=&dateFrom=&dateTo=&opponentTeamId=0&vsConference=&vsDivision=&gameSegment=&period=0&lastNGames=0&gameId=&group_id=0&contextFilter=&contextMeasure=FGA"
Season <- rjson::fromJSON(file = shoturl, method="C")
shoturl <- "http://stats.nba.com/stats/shotchartlineupdetail?CFID=33&CFPARAMS=2016-17leagueId=00&season=2016-17&seasonType=Regular+Season&teamId=0&outcome=&location=&month=0&seasonSegment=&dateFrom=&dateTo=&opponentTeamId=0&vsConference=&vsDivision=&gameSegment=&period=0&lastNGames=0&gameId=&group_id=0&contextFilter=&contextMeasure=FGA"
Season <- rjson::fromJSON(file = shoturl, method="C")
http://stats.nba.com/stats/shotchartdetail?CFID=33&CFPARAMS=",season ,"&ContextFilter=&ContextMeasure=FGA&DateFrom=&DateTo=&GameID=&GameSegment=&LastNGames=0&LeagueID=00&Location=&MeasureType=Base&Month=0&OpponentTeamID=0&Outcome=&PaceAdjust=N&PerMode=PerGame&Period=0&PlayerID=0&PlusMinus=N&Position=&Rank=N&RookieYear=&Season=",season,"&SeasonSegment=&SeasonType=", type,"&TeamID=0&VsConference=&VsDivision=&mode=Advanced&showDetails=0&showShots=1&showZones=0&PlayerPosition=
shoturl <- "http://stats.nba.com/stats/shotchartlineupdetail?CFPARAMS=2016-17leagueId=00&season=2016-17&seasonType=Regular+Season&teamId=0&outcome=&location=&month=0&seasonSegment=&dateFrom=&dateTo=&opponentTeamId=0&vsConference=&vsDivision=&gameSegment=&period=0&lastNGames=0&gameId=&group_id=0&contextFilter=&contextMeasure=FGA"
Season <- rjson::fromJSON(file = shoturl, method="C")
shotURLtotal <- paste0("http://stats.nba.com/stats/shotchartdetail?CFID=33&CFPARAMS=2016-17&ContextFilter=&ContextMeasure=FGA&DateFrom=&DateTo=&GameID=&GameSegment=&LastNGames=0&LeagueID=00&Location=&MeasureType=Base&Month=0&OpponentTeamID=0&Outcome=&PaceAdjust=N&PerMode=PerGame&Period=0&PlayerID=0&PlusMinus=N&Position=&Rank=N&RookieYear=&Season=2016-17&SeasonSegment=&SeasonType=Regular+Season&TeamID=0&VsConference=&VsDivision=&mode=Advanced&showDetails=0&showShots=1&showZones=0&PlayerPosition=")
Season <- rjson::fromJSON(file = shoturl, method="C")
Names <- Season$resultSets[[1]][[2]]
Season <- data.frame(matrix(unlist(Season$resultSets[[1]][[3]]), ncol = length(Names), byrow = TRUE))
shotURLtotal <- paste0("http://stats.nba.com/stats/shotchartdetail?CFID=33&CFPARAMS=2016-17&ContextFilter=&ContextMeasure=FGA&DateFrom=&DateTo=&GameID=&GameSegment=&LastNGames=0&LeagueID=00&Location=&MeasureType=Base&Month=0&OpponentTeamID=0&Outcome=&PaceAdjust=N&PerMode=PerGame&Period=0&PlayerID=0&PlusMinus=N&Position=&Rank=N&RookieYear=&Season=2016-17&SeasonSegment=&SeasonType=Regular+Season&TeamID=0&VsConference=&VsDivision=&mode=Advanced&showDetails=0&showShots=1&showZones=0&PlayerPosition=")
Season <- rjson::fromJSON(file = shoturl, method="C")
shotURLtotal <- paste0("http://stats.nba.com/stats/shotchartdetail?CFID=33&CFPARAMS=2016-17&ContextFilter=&ContextMeasure=FGA&DateFrom=&DateTo=&GameID=&GameSegment=&LastNGames=0&LeagueID=00&Location=&MeasureType=Base&Month=0&OpponentTeamID=0&Outcome=&PaceAdjust=N&PerMode=PerGame&Period=0&PlayerID=0&PlusMinus=N&Position=&Rank=N&RookieYear=&Season=2016-17&SeasonSegment=&SeasonType=Regular+Season&TeamID=0&VsConference=&VsDivision=&mode=Advanced&showDetails=0&showShots=1&showZones=0&PlayerPosition=")
Season <- rjson::fromJSON(file = shotURLtotal, method="C")
Names <- Season$resultSets[[1]][[2]]
Season <- data.frame(matrix(unlist(Season$resultSets[[1]][[3]]), ncol = length(Names), byrow = TRUE))
View(Season)
colnames(Season) <- Names
shoturl <- "http://stats.nba.com/stats/shotchartlineupdetail/?leagueId=00&season=2016-17&seasonType=Regular+Season&teamId=0&outcome=&location=&month=0&seasonSegment=&dateFrom=&dateTo=&opponentTeamId=0&vsConference=&vsDivision=&gameSegment=&period=0&lastNGames=0&gameId=&group_id=0&contextFilter=&contextMeasure=FGA"
Season <- rjson::fromJSON(file = shoturl, method="C")
Names <- Season$resultSets[[1]][[2]]
Season <- data.frame(matrix(unlist(Season$resultSets[[1]][[3]]), ncol = length(Names), byrow = TRUE))
shoturl <- "http://stats.nba.com/stats/shotchartlineupdetail?CFID=33&CFPARAMS=2016-17&leagueId=00&season=2016-17&seasonType=Regular+Season&teamId=0&outcome=&location=&month=0&seasonSegment=&dateFrom=&dateTo=&opponentTeamId=0&vsConference=&vsDivision=&gameSegment=&period=0&lastNGames=0&gameId=&group_id=0&contextFilter=&contextMeasure=FGA"
Season <- rjson::fromJSON(file = shoturl, method="C")
Names <- Season$resultSets[[1]][[2]]
shoturl <- "http://stats.nba.com/stats/shotchartlineupdetail?CFID=33&CFPARAMS=2016-17&leagueId=00&season=2016-17&seasonType=Regular+Season&teamId=0&outcome=&location=&month=0&seasonSegment=&dateFrom=&dateTo=&opponentTeamId=0&vsConference=&vsDivision=&gameSegment=&period=0&lastNGames=0&gameId=&group_id=0&contextFilter=&contextMeasure=FGA"
Season <- rjson::fromJSON(file = shoturl, method="C")
Names <- Season$resultSets[[1]][[2]]
Season <- data.frame(matrix(unlist(Season$resultSets[[1]][[3]]), ncol = length(Names), byrow = TRUE))
shoturl <- "http://stats.nba.com/stats/shotchartlineupdetail?CFID=34&CFPARAMS=2016-17&leagueId=00&season=2016-17&seasonType=Regular+Season&teamId=0&outcome=&location=&month=0&seasonSegment=&dateFrom=&dateTo=&opponentTeamId=0&vsConference=&vsDivision=&gameSegment=&period=0&lastNGames=0&gameId=&group_id=0&contextFilter=&contextMeasure=FGA"
Season <- rjson::fromJSON(file = shoturl, method="C")
Names <- Season$resultSets[[1]][[2]]
Season <- data.frame(matrix(unlist(Season$resultSets[[1]][[3]]), ncol = length(Names), byrow = TRUE))
shoturl <- "http://stats.nba.com/stats/shotchartlineupdetail?CFID=32&CFPARAMS=2016-17&leagueId=00&season=2016-17&seasonType=Regular+Season&teamId=0&outcome=&location=&month=0&seasonSegment=&dateFrom=&dateTo=&opponentTeamId=0&vsConference=&vsDivision=&gameSegment=&period=0&lastNGames=0&gameId=&group_id=0&contextFilter=&contextMeasure=FGA"
Season <- rjson::fromJSON(file = shoturl, method="C")
Names <- Season$resultSets[[1]][[2]]
Season <- data.frame(matrix(unlist(Season$resultSets[[1]][[3]]), ncol = length(Names), byrow = TRUE))
shoturl <- "http://stats.nba.com/stats/shotchartlineupdetail?CFID=1&CFPARAMS=2016-17&leagueId=00&season=2016-17&seasonType=Regular+Season&teamId=0&outcome=&location=&month=0&seasonSegment=&dateFrom=&dateTo=&opponentTeamId=0&vsConference=&vsDivision=&gameSegment=&period=0&lastNGames=0&gameId=&group_id=0&contextFilter=&contextMeasure=FGA"
Season <- rjson::fromJSON(file = shoturl, method="C")
Names <- Season$resultSets[[1]][[2]]
Season <- data.frame(matrix(unlist(Season$resultSets[[1]][[3]]), ncol = length(Names), byrow = TRUE))
?tryCatch()
tryCatch(1, finally = print("Hello"))
e <- simpleError("test error")
stop(e)
tryCatch(stop(e), finally = print("Hello"))
tryCatch(stop("fred"), finally = print("Hello"))
CFID <- 1:100
CFID
CFID <- 1:100
Season <- list()
for (i in 1:100){
shoturl <- paste0("http://stats.nba.com/stats/shotchartlineupdetail?CFID=", i ,"&CFPARAMS=2016-17&leagueId=00&season=2016-17&seasonType=Regular+Season&teamId=0&outcome=&location=&month=0&seasonSegment=&dateFrom=&dateTo=&opponentTeamId=0&vsConference=&vsDivision=&gameSegment=&period=0&lastNGames=0&gameId=&group_id=0&contextFilter=&contextMeasure=FGA")
Season <- rjson::fromJSON(file = shoturl, method="C")
Names <- Season$resultSets[[1]][[2]]
tryCatch({Season <- data.frame(matrix(unlist(Season$resultSets[[1]][[3]]), ncol = length(Names), byrow = TRUE))}, error=function(e){})
}
Season <- rjson::fromJSON(file = shoturl, method="C")
CFID <- 1:100
Season <- list()
for (i in 1:100){
shoturl <- paste0("http://stats.nba.com/stats/shotchartlineupdetail?CFID=", i ,"&CFPARAMS=2016-17&leagueId=00&season=2016-17&seasonType=Regular+Season&teamId=0&outcome=&location=&month=0&seasonSegment=&dateFrom=&dateTo=&opponentTeamId=0&vsConference=&vsDivision=&gameSegment=&period=0&lastNGames=0&gameId=&group_id=0&contextFilter=&contextMeasure=FGA")
tryCatch({
Season <- rjson::fromJSON(file = shoturl, method="C")
Names <- Season$resultSets[[1]][[2]]
Season <- data.frame(matrix(unlist(Season$resultSets[[1]][[3]]), ncol = length(Names), byrow = TRUE))}, error=function(e){})
}
CFID <- 1:100
Season <- list()
for (i in 1:100){
shoturl <- paste0("http://stats.nba.com/stats/shotchartlineupdetail?CFID=", i ,"&CFPARAMS=2016-17&leagueId=00&season=2016-17&seasonType=Regular+Season&teamId=0&outcome=&location=&month=0&seasonSegment=&dateFrom=&dateTo=&opponentTeamId=0&vsConference=&vsDivision=&gameSegment=&period=0&lastNGames=0&gameId=&group_id=0&contextFilter=&contextMeasure=FGA")
tryCatch({
Season <- rjson::fromJSON(file = shoturl, method="C")
Names <- Season$resultSets[[1]][[2]]
Season <- data.frame(matrix(unlist(Season$resultSets[[1]][[3]]), ncol = length(Names), byrow = TRUE))}, error=function(e){})
print(i)
}
str(Season)
CFID <- 1:100
Season <- list()
for (i in 1:100){
shoturl <- paste0("http://stats.nba.com/stats/shotchartlineupdetail?CFID=", i ,"&CFPARAMS=2016-17&leagueId=00&season=2016-17&seasonType=Regular+Season&teamId=0&outcome=&location=&month=0&seasonSegment=&dateFrom=&dateTo=&opponentTeamId=0&vsConference=&vsDivision=&gameSegment=&period=0&lastNGames=0&gameId=&group_id=0&contextFilter=&contextMeasure=FGA")
tryCatch({
Season <- rjson::fromJSON(file = shoturl, method="C")
Names <- Season$resultSets[[1]][[2]]
Season <- data.frame(matrix(unlist(Season$resultSets[[1]][[3]]), ncol = length(Names), byrow = TRUE))}, error=function(e){})
print(i)
}
str(Season)
Season <- data.frame(matrix(unlist(Season$resultSets[[1]][[3]]), ncol = length(Names), byrow = TRUE))
CFID <- 1:100
Season <- list()
for (i in 1:100){
shoturl <- paste0("http://stats.nba.com/stats/shotchartlineupdetail?CFID=", i ,"&CFPARAMS=2016-17&leagueId=00&season=2016-17&seasonType=Regular+Season&teamId=0&outcome=&location=&month=0&seasonSegment=&dateFrom=&dateTo=&opponentTeamId=0&vsConference=&vsDivision=&gameSegment=&period=0&lastNGames=0&gameId=&group_id=0&contextFilter=&contextMeasure=FGA")
tryCatch({
Season <- rjson::fromJSON(file = shoturl, method="C")
Names <- Season$resultSets[[1]][[2]]
Season <- data.frame(matrix(unlist(Season$resultSets[[1]][[3]]), ncol = length(Names), byrow = TRUE))}, error=function(e){cat("ERROR :",conditionMessage(e), "\n", i)})
print(i)
}
CFID <- 1:100
Season <- list()
for (i in 1:100){
shoturl <- paste0("http://stats.nba.com/stats/shotchartlineupdetail?CFID=", i ,"&CFPARAMS=2016-17&leagueId=00&season=2016-17&seasonType=Regular+Season&teamId=0&outcome=&location=&month=0&seasonSegment=&dateFrom=&dateTo=&opponentTeamId=0&vsConference=&vsDivision=&gameSegment=&period=0&lastNGames=0&gameId=&group_id=0&contextFilter=&contextMeasure=FGA")
tryCatch({
Season <- rjson::fromJSON(file = shoturl, method="C")
Names <- Season$resultSets[[1]][[2]]
Season[[i]] <- data.frame(matrix(unlist(Season$resultSets[[1]][[3]]), ncol = length(Names), byrow = TRUE))}, error=function(e){cat("ERROR :",conditionMessage(e), "\n", i)})
print(i)
}
str(Season)
CFID <- 1:100
Season <- list()
for (i in 1:100){
shoturl <- paste0("http://stats.nba.com/stats/shotchartlineupdetail?CFID=", i ,"&CFPARAMS=2016-17&leagueId=00&season=2016-17&seasonType=Regular+Season&teamId=0&outcome=&location=&month=0&seasonSegment=&dateFrom=&dateTo=&opponentTeamId=0&vsConference=&vsDivision=&gameSegment=&period=0&lastNGames=0&gameId=&group_id=0&contextFilter=&contextMeasure=FGA")
tryCatch({
Season[[i]]  <- rjson::fromJSON(file = shoturl, method="C")
Names <- Season$resultSets[[1]][[2]]
Season[[i]] <- data.frame(matrix(unlist(Season$resultSets[[1]][[3]]), ncol = length(Names), byrow = TRUE))}, error=function(e){cat("ERROR :",conditionMessage(e), "\n", i)})
print(i)
}
CFID <- 1:100
Season <- list()
for (i in 1:100){
shoturl <- paste0("http://stats.nba.com/stats/shotchartlineupdetail?CFID=", i ,"&CFPARAMS=2016-17&leagueId=00&season=2016-17&seasonType=Regular+Season&teamId=0&outcome=&location=&month=0&seasonSegment=&dateFrom=&dateTo=&opponentTeamId=0&vsConference=&vsDivision=&gameSegment=&period=0&lastNGames=0&gameId=&group_id=0&contextFilter=&contextMeasure=FGA")
tryCatch({
Season[[i]]  <- rjson::fromJSON(file = shoturl, method="C")
Names <- Season$resultSets[[1]][[2]]
Season[[i]] <- data.frame(matrix(unlist(Season$resultSets[[1]][[3]]), ncol = length(Names), byrow = TRUE))}, error=function(e){cat("ERROR :",conditionMessage(e), "\n", i)})
print(i)
}
CFID <- 1:100
Season <- list()
for (i in 1:100){
shoturl <- paste0("http://stats.nba.com/stats/shotchartlineupdetail?CFID=", i ,"&CFPARAMS=2016-17&leagueId=00&season=2016-17&seasonType=Regular+Season&teamId=0&outcome=&location=&month=0&seasonSegment=&dateFrom=&dateTo=&opponentTeamId=0&vsConference=&vsDivision=&gameSegment=&period=0&lastNGames=0&gameId=&group_id=0&contextFilter=&contextMeasure=FGA")
tryCatch({
Season[[i]]  <- rjson::fromJSON(file = shoturl, method="C")
Names <- Season$resultSets[[1]][[2]]
Season[[i]] <- data.frame(matrix(unlist(Season$resultSets[[1]][[3]]), ncol = length(Names), byrow = TRUE))}, error=function(e){cat("ERROR :",conditionMessage(e), "\n", i)})
print(i)
}
CFID <- 1:100
Season <- list()
for (i in 1:100){
shoturl <- paste0("http://stats.nba.com/stats/shotchartlineupdetail?CFID=", i ,"&CFPARAMS=2016-17&leagueId=00&season=2016-17&seasonType=Regular+Season&teamId=0&outcome=&location=&month=0&seasonSegment=&dateFrom=&dateTo=&opponentTeamId=0&vsConference=&vsDivision=&gameSegment=&period=0&lastNGames=0&gameId=&group_id=0&contextFilter=&contextMeasure=FGA")
tryCatch({
Season[[i]]  <- rjson::fromJSON(file = shoturl, method="C")
Names <- Season$resultSets[[1]][[2]]
Season[[i]] <- data.frame(matrix(unlist(Season$resultSets[[1]][[3]]), ncol = length(Names), byrow = TRUE))}, error=function(e){cat("ERROR :",conditionMessage(e), "\n", i)})
print(i)
}
library(SpatialBall)
data("season2017")
#Examples with several teams
OffShotSeasonGraphTeam(season2017, team = "GSW")
OffShotSeasonGraphTeam(season2017, team = "Hou")
library(SpatialBall)
